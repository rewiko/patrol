

/*
 * RTSGameGUI.java
 *
 * Created on 16-set-2009, 17.33.22
 */

package it.unipr.ce.dsg.p2pgame.GUI;


import it.unipr.ce.dsg.p2pgame.GUI.message.content.GamePeerInfo;
import it.unipr.ce.dsg.p2pgame.GUI.message.content.Point;

import java.awt.Choice;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

import it.unipr.ce.dsg.p2pgame.platform.GamePlayer;
import it.unipr.ce.dsg.p2pgame.platform.GamePlayerResponsible;
import it.unipr.ce.dsg.p2pgame.platform.GameResource;
import it.unipr.ce.dsg.p2pgame.platform.GameResourceEvolve;
import it.unipr.ce.dsg.p2pgame.platform.GameResourceMobile;
import it.unipr.ce.dsg.p2pgame.platform.GameResourceMobileResponsible;
import it.unipr.ce.dsg.p2pgame.util.MultiLog;

import it.unipr.ce.dsg.p2pgame.platform.bot.message.MessageSender;

/**
 *
 * @author stefanoSeb
 */
public class RTSGameGUI extends javax.swing.JFrame {



   
	private static final long serialVersionUID = 1L;

	private static RTSGameGUI peerGUI;

	/** Creates new form RTSGameGUI */
    public RTSGameGUI() {

        request=new MessageSender(9998);
        initComponents();
    }


	public javax.swing.JLabel getXPositionLabel() {
		return xPositionLabel;
	}

	public javax.swing.JLabel getYPositionLabel() {
		return yPositionLabel;
	}


	public javax.swing.JLabel getShowMoneyLabel() {
		return showMoneyLabel;
	}

	public void setShowMoneyLabel(javax.swing.JLabel showMoneyLabel) {
		this.showMoneyLabel = showMoneyLabel;
	}


	public BattlefieldPanel getSpacePanel() {
		return spacePanel;
	}

	public void setSpacePanel(BattlefieldPanel spacePanel) {
		this.spacePanel = spacePanel;
	}


	public javax.swing.JList getResourcesList() {
		return resourcesList;
	}

	public void setResourcesList(javax.swing.JList resourcesList) {
		this.resourcesList = resourcesList;
	}


     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        infoPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        firstPortLabel = new javax.swing.JLabel();
        portTextField = new javax.swing.JTextField();
        serverAddrLabel = new javax.swing.JLabel();
        serverAddressTextField = new javax.swing.JTextField();
        serverPortLabel = new javax.swing.JLabel();
        serverPortTextField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        peerIdLabel = new javax.swing.JLabel();
        showPeerIdLabel = new javax.swing.JLabel();
        localAddrLabel = new javax.swing.JLabel();
        showLocalAddrLabel = new javax.swing.JLabel();
        localPortLabel = new javax.swing.JLabel();
        showLocalPortsLabel = new javax.swing.JLabel();
        myStatsPanel = new javax.swing.JPanel();
        planetPositionLabel = new javax.swing.JLabel();
        xPositionLabel = new javax.swing.JLabel();
        yPositionLabel = new javax.swing.JLabel();
        moneyLabel = new javax.swing.JLabel();
        showMoneyLabel = new javax.swing.JLabel();
        euroMoneyLabel = new javax.swing.JLabel();
        buyButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        resourcesLabel = new javax.swing.JLabel();
        resourceTypeLabel = new javax.swing.JLabel();
        resourceQuantityLabel = new javax.swing.JLabel();
        resourceXLabel = new javax.swing.JLabel();
        resourceYLabel = new javax.swing.JLabel();
        resourceVelocityLabel = new javax.swing.JLabel();
        resourceVelocityUnitLabel = new javax.swing.JLabel();
        resourceVisionLabel = new javax.swing.JLabel();
        resourceVisionUnitLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resourcesList = new javax.swing.JList();
        resourceInfoLabel = new javax.swing.JLabel();
        battlefieldPanel = new javax.swing.JPanel();
        
        //TODO: aggiustare il secondo parametro leggendolo da quello del gamePeer


        gameInfoPanel = new javax.swing.JPanel();
        currXPosLabel = new javax.swing.JLabel();
        currYPosLabel = new javax.swing.JLabel();

       
        resType = new javax.swing.JLabel();
        info = new javax.swing.JLabel();
        qtInfo = new javax.swing.JLabel();
        choiceAttack = new Choice();
        moveButton = new javax.swing.JButton();

        									// ./
        spacePanel = new BattlefieldPanel("res/space_575x575.png", 5, currXPosLabel, currYPosLabel, gameInfoPanel,null);// gp);
        spacePanel.initializeKnowledge();


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RTS Game");
        setResizable(false);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(800, 600));

        usernameLabel.setText("Username");

        usernameTextField.setText("Username");

        passwordLabel.setText("Password");

        passwordField.setText("jPasswordField1");

        firstPortLabel.setText("First Port");

        portTextField.setText("6891");

        serverAddrLabel.setText("Server Address");
        							//"160.78.28.131"
        serverAddressTextField.setText("127.0.0.1");

        serverPortLabel.setText("Server Port");

        serverPortTextField.setText("1235");

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
                usernameTextField.setEditable(false);
                passwordField.setEditable(false);
                serverAddressTextField.setEditable(false);
                serverPortTextField.setEditable(false);
                portTextField.setEditable(false);

                registerButton.setEnabled(false);

                   
                //message_sender
                peerIdLabel.setText(request.getGamePeerId());
                

                //message_sender
                localAddrLabel.setText(request.getIpAddress());
                localPortLabel.setText(portTextField.getText() + " : " + ( Integer.toString(Integer.parseInt(portTextField.getText())+3) ) );


 //                spacePanel.setPeerToList(gp);

            }
        });

        peerIdLabel.setText("Peer Id");

        localAddrLabel.setText("Local Address");

        localPortLabel.setText("Local Ports");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addComponent(serverAddrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(serverAddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addComponent(firstPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                        .addGap(117, 117, 117)
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serverPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(registerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serverPortTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(145, 145, 145))
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(peerIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                                .addComponent(localAddrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showLocalAddrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(localPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showLocalPortsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showPeerIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(usernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(serverAddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(serverPortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(serverPortTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                    .addComponent(serverAddrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstPortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(portTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(peerIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showPeerIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showLocalPortsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(localPortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showLocalAddrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(localAddrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(354, 354, 354))
        );

        jTabbedPane1.addTab("Info", infoPanel);

        planetPositionLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        planetPositionLabel.setText("Planet Position :");

        xPositionLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        xPositionLabel.setText("x");

        yPositionLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        yPositionLabel.setText("y");

        moneyLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        moneyLabel.setText("Money :");

        showMoneyLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        showMoneyLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        showMoneyLabel.setText("0.00");

        euroMoneyLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        euroMoneyLabel.setText("ï¿½");

        
        buyButton.setIcon(new javax.swing.ImageIcon("res/Money-32x32.png")); // NOI18N
        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	MultiLog.println(RTSGameGUI.class.toString(), "Pre azione buy");
            	
                buyButtonActionPerformed(evt);
                MultiLog.println(RTSGameGUI.class.toString(), "Post azione buy");
                
            }
        });

        resourcesLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        resourcesLabel.setText("Resources :");

        resourceTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceQuantityLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceXLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceYLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceVelocityLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceVelocityUnitLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceVisionLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourceVisionUnitLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
       

        resourcesList.setModel( new GameResourceListModel(new ArrayList<Object>()));



        resourcesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            	
                resourcesListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(resourcesList);

        resourceInfoLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        resourceInfoLabel.setText("Resource Info :");

        javax.swing.GroupLayout myStatsPanelLayout = new javax.swing.GroupLayout(myStatsPanel);
        myStatsPanel.setLayout(myStatsPanelLayout);
        myStatsPanelLayout.setHorizontalGroup(
            myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myStatsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                    .addGroup(myStatsPanelLayout.createSequentialGroup()
                        .addComponent(planetPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(yPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(myStatsPanelLayout.createSequentialGroup()
                        .addComponent(moneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showMoneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(euroMoneyLabel)
                        .addGap(153, 153, 153)
                        .addComponent(buyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(myStatsPanelLayout.createSequentialGroup()
                        .addComponent(resourceTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resourceQuantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resourceXLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(resourceYLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resourceVelocityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resourceVelocityUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resourceVisionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resourceVisionUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resourcesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resourceInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        myStatsPanelLayout.setVerticalGroup(
            myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myStatsPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planetPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showMoneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(euroMoneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(resourcesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(resourceInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resourceTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(resourceQuantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                    .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resourceXLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(resourceYLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(myStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(resourceVisionLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resourceVelocityUnitLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resourceVelocityLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                    .addComponent(resourceVisionUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addGap(289, 289, 289))
        );

        jTabbedPane1.addTab("My Stats", myStatsPanel);

        spacePanel.setPreferredSize(new java.awt.Dimension(575, 575));

        javax.swing.GroupLayout spacePanelLayout = new javax.swing.GroupLayout(spacePanel);
        spacePanel.setLayout(spacePanelLayout);
        spacePanelLayout.setHorizontalGroup(
            spacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        spacePanelLayout.setVerticalGroup(
            spacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 671, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout gameInfoPanelLayout = new javax.swing.GroupLayout(gameInfoPanel);
        gameInfoPanel.setLayout(gameInfoPanelLayout);
        gameInfoPanelLayout.setHorizontalGroup(
            gameInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 189, Short.MAX_VALUE)
        );
        gameInfoPanelLayout.setVerticalGroup(
            gameInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 671, Short.MAX_VALUE)
        );

        currXPosLabel.setText("x");

        currYPosLabel.setText("y");

        //####
       
        resType.setVisible(false);
        resType.setName("resType");

        info.setText("Info");
        info.setVisible(false);
        info.setName("Info");

        qtInfo.setText("qtInfo");
        qtInfo.setVisible(false);
        qtInfo.setName("qtInfo");

       
        choiceAttack.setVisible(false);
        choiceAttack.setName("Choice");


        moveButton.setText("Move");
        moveButton.setVisible(false);
        moveButton.setName("move");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(gameInfoPanel);
        gameInfoPanel.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(currXPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(currYPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resType, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(moveButton))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(choiceAttack, 0, 76, Short.MAX_VALUE)
                .addGap(128, 128, 128))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currXPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currYPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resType, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(qtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(choiceAttack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(moveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout battlefieldPanelLayout = new javax.swing.GroupLayout(battlefieldPanel);
        battlefieldPanel.setLayout(battlefieldPanelLayout);
        battlefieldPanelLayout.setHorizontalGroup(
            battlefieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(battlefieldPanelLayout.createSequentialGroup()
                .addComponent(spacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        battlefieldPanelLayout.setVerticalGroup(
            battlefieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spacePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
            .addComponent(gameInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Battlefield", battlefieldPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
    	int portMin = Integer.parseInt(portTextField.getText().trim());
    	int serverPort = Integer.parseInt(serverPortTextField.getText().trim());
    	MultiLog.println(RTSGameGUI.class.toString(), "porta server letta " + serverPort);
    	
    	System.out.println("prima di CreateGamePeer");
    	//message_sender
        request.CreateGamePeer(portMin+ 1 , portMin, 160, "", serverAddressTextField.getText().trim(), serverPort, portMin + 3, portMin + 2, serverAddressTextField.getText().trim(), serverPort+2, 4000,1000,64000,2000);

        System.out.println("prima di registerOnServer");
    	//message_sender
        //request.registerOnServer(usernameTextField.getText(), passwordField.getPassword().toString());
        request.registerOnServer("username", "password");
        
        System.out.println("prima di startGame");
    	//message_sender
        request.startGame(0,575,0,575,0,0, 1,10, 5);

        

}//GEN-LAST:event_registerButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        // TODO add your handling code here:

        MessageSender request1=new MessageSender(9998);

        //message_sender
        if (request.GamePeerExist() == false)
    		return;

    	
    	MultiLog.println(RTSGameGUI.class.toString(), "Opening buy windows...");

    	//message_sender
        GameResourceEvolve resev=(GameResourceEvolve)request1.getMyResourceFromId("moneyEvolveble");
        double moneyQt=resev.getQuantity();
        //System.out.println("RESOURCE_ID 682");
        

    	//JFrame
    	buyFrame = new JFrame();
    	buyFrame.setTitle("Buy Windows");
    	buyFrame.setBounds(100, 100, 300, 300);
    	GridLayout layout = new GridLayout(0,2);
    	
    	buyFrame.setLayout(layout);

    	JLabel moneyAvailableLabel = new JLabel();
    	moneyAvailableLabel.setText("Tot available: ");
    	JLabel money = new JLabel();
    	money.setText(Double.toString(moneyQt));
    	buyFrame.add(moneyAvailableLabel);
    	buyFrame.add(money);

    	JLabel spendLabel = new JLabel();
    	spendLabel.setText("how much spend:");
    	
    	toSpend.setText(Double.toString(moneyQt));
    	buyFrame.add(spendLabel);
    	buyFrame.add(toSpend);

    	
        // if the money is not enough, uncheck the component

    	
        // creates a radio button listener and register the radio buttons
    	ActionListener listener = new JRadioButtonListener();


    	JRadioButton defenseButton = new JRadioButton("Defense");
	    
	    defenseButton.setActionCommand("Defense");
	    defenseButton.setSelected(true);

	    JRadioButton attackButton = new JRadioButton("Attack");
	    
	    attackButton.setActionCommand("Attack");

	    defenseButton.addActionListener(listener);
	    attackButton.addActionListener(listener);

    	//Group the radio buttons.
        ButtonGroup group = new ButtonGroup();
        group.add(defenseButton);
        group.add(attackButton);


        int dispo = (int) (Double.parseDouble(toSpend.getText()) - Double.parseDouble(toSpend.getText())%10);
        
        defenseQt.setText(Integer.toString(dispo));
        
        attackQt.setText(Integer.toString(dispo));
        attackQt.setEditable(false);

        buyFrame.add(defenseButton);
        buyFrame.add(defenseQt);
        buyFrame.add(attackButton);
        buyFrame.add(attackQt);
      

    	JButton shopButton = new JButton();
    	shopButton.setText("Buy !");

    	shopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopButtonActionPerformed(evt);

            }
        });

    	buyFrame.add(shopButton);

    	if (moneyQt < 10){
    		shopButton.setEnabled(false);
    	}

    	buyFrame.pack();
    	buyFrame.setVisible(true);

    	MultiLog.println(RTSGameGUI.class.toString(), "Finestra chiusa");
    	

}//GEN-LAST:event_buyButtonActionPerformed

    JFrame buyFrame;// = new JFrame();

    JTextField defenseQt = new JTextField();
    JTextField attackQt = new JTextField();
    JTextField toSpend = new JTextField();

 // listener JRadioButton
    class JRadioButtonListener implements ActionListener {
    	public void actionPerformed(ActionEvent e) {

    		String target = e.getActionCommand();
    		System.out.println("###  " + target);

    		if (target.compareTo("Defense") == 0){
    			defenseQt.setEditable(true);
    			defenseQt.setText(Double.toString(Double.parseDouble(toSpend.getText()) - Double.parseDouble(toSpend.getText())%10));
    			attackQt.setEditable(false);

    		}
    		else if (target.compareTo("Attack") == 0){
    			attackQt.setEditable(true);
    			attackQt.setText(Double.toString(Double.parseDouble(toSpend.getText()) - Double.parseDouble(toSpend.getText())%10));
    			defenseQt.setEditable(false);

    		}
    	}
    }

    private void shopButtonActionPerformed(java.awt.event.ActionEvent evt){


      

        GameResource res=null;
  
        res = request.getMyResourceFromId("moneyEvolveble");
        
    	String timestamp = Long.toString(System.currentTimeMillis());

    	if (defenseQt.isEditable()){
    		
                System.out.println("MONEY_UPDATE");
                request.UpdateResourceEvolve(res.getQuantity()-Double.parseDouble(defenseQt.getText()));
    		    System.out.println("COMPRATA DIFESA");
                

                request.addResource("def" + timestamp, "Defense" + timestamp, Double.parseDouble(defenseQt.getText()));
                //System.out.println("824 addresource");
               
               
                peerGUI.getResourcesList().setModel(new GameResourceListModel(request.getResources()));
               
    		peerGUI.repaint();

        
    	}
    	else if (attackQt.isEditable()){
    		
                System.out.println("MONEY_UPDATE");
                request.UpdateResourceEvolve(res.getQuantity()-Double.parseDouble(defenseQt.getText()));
    		System.out.println("COMPRATO ATTACCO");
            
                request.createMobileResource("Attack" + timestamp, Double.parseDouble(attackQt.getText()));
            
                peerGUI.getResourcesList().setModel(new GameResourceListModel(request.getResources()));

    		peerGUI.repaint();

    	}

    	buyFrame.dispose();
    }

    private void resourcesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:

    	JList list = (JList)evt.getSource();
       
    	list.getSelectedIndex();
    	Object[] elements = list.getSelectedValues();

    	if(elements.length > 0 )
    	{

        	Object element = ( (GameResourceListModel) resourcesList.getModel() ).getObjectAt(list.getSelectedIndex());

        	if (element instanceof GameResourceEvolve){
        		MultiLog.println(RTSGameGUI.class.toString(), "l'elemento selezionato e' di tipo evolve");
       

        		GameResourceEvolve evo = (GameResourceEvolve) element;
        		resourceTypeLabel.setText("MINE");
       
        		resourceVelocityLabel.setText(Double.toString(evo.getOffset()));
        		resourceVelocityUnitLabel.setText("ï¿½/s");

        		//clean
        		resourceQuantityLabel.setText("");
        		resourceXLabel.setText("");
        		resourceYLabel.setText("");
        		resourceVisionLabel.setText("");
        		resourceVisionUnitLabel.setText("");

        	}
        	else if (element instanceof GameResourceMobile){
        		MultiLog.println(RTSGameGUI.class.toString(), "l'elemento e' Mobile");
       

        		GameResourceMobile mob = (GameResourceMobile) element;
        		resourceTypeLabel.setText("STARSHIP");
        		resourceQuantityLabel.setText(Double.toString(mob.getQuantity()));
        		resourceXLabel.setText(Double.toString(mob.getX()));
        		resourceYLabel.setText(Double.toString(mob.getY()));
        		resourceVelocityLabel.setText(Double.toString(mob.getVelocity()));
        		resourceVelocityUnitLabel.setText("Km/s");
        		resourceVisionLabel.setText(Double.toString(mob.getVision()));
        		resourceVisionUnitLabel.setText("Km^2");


        	}
        	else if (element instanceof GameResource){
        		MultiLog.println(RTSGameGUI.class.toString(), "l'elemento e' Fisso");
       

        		GameResource flat = (GameResource) element;
        		resourceTypeLabel.setText("DEFENSE");
        		resourceQuantityLabel.setText(Double.toString(flat.getQuantity()));

        		//clean
        		resourceXLabel.setText("");
        		resourceYLabel.setText("");
        		resourceVelocityLabel.setText("");
        		resourceVelocityUnitLabel.setText("");
        		resourceVisionLabel.setText("");
        		resourceVelocityUnitLabel.setText("");

        	}

    	}

}//GEN-LAST:event_jList1ValueChanged



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {

    	new MultiLog("configLog.txt", false, true);
        final MessageSender request1=new MessageSender(9998);

    	peerGUI = new RTSGameGUI();
    	
        peerGUI.setVisible(true);

        Thread guiUpdate = new Thread( new Runnable() {

        	boolean createInitialResource = false;

			public void run() {
				try {

					Thread.sleep(5000);

					while (true){
						
						peerGUI.battlefieldPanel.repaint();
						Thread.sleep(100);
						

                                                //message_sender
                                                if (request1.GamePeerExist()==true) {
                                                		
                                                        if (request1.getGamePlayer() != null){
                                                         //System.out.println("GPLAYER 991");
                                                        
                                                         double px=0;
                                                         double py=0;
                                                        
                                                         Point point=null;
                                                         //message_sender
                                                         point = request1.getGamePlayerPosition();
                                                         px=point.getX();
                                                         py=point.getY();
                                                        
                                                         peerGUI.getXPositionLabel().setText(new Double(px).toString());
							 peerGUI.getYPositionLabel().setText(new Double(py).toString());
                                                        // System.out.println("1008 position");
                                                         
							if (!this.createInitialResource){ //con flag per vedere se ci sono tutte le risorse evolvibili
								MultiLog.println(RTSGameGUI.class.toString(), "RISORSA SOLDI CREATA aa");

                                                                //message_sender
                                                                request1.addResourceEvolve("moneyEvolveble", "Money", 0, 1000, 1);

                                                               // System.out.println("\n\n\n\n\n\n\n\n\1024 money evolve\n\n\n\n\n\n\n\n\n\n");
                                                                      

					                this.createInitialResource = true;

                                                      
                                                                MultiLog.println(RTSGameGUI.class.toString(), "QUANTITA' delle RISORSE PERSONALI " + request1.getResourcesSize());

                                                                //System.out.println("\n\n\n\n\n\n1040 multilog res size\n\n\n\n\n");

                                                                //message_sender
                                                                request1.addResource("stdDef", "Defense", 10);
                                                               // System.out.println("\n\n\n\n\n\n 1043 defense addresource\n\n\n\n\n\n");

                                                                //message_sender
                                                                peerGUI.getResourcesList().setModel(new GameResourceListModel(request1.getResources()));
                  
								}
							}
							
							//TODO: aggiustare non funziona bene

                                                        GameResource res=null;
                                                        //message_sender
                                                        res = request1.getMyResourceFromId("moneyEvolveble");

                                                        //System.out.println("\n\n\n\n\n1111 resource\n\n\n\n\n");

                                                        
                                                        if (res != null){

                                                                peerGUI.getShowMoneyLabel().setText( new Double(res.getQuantity()).toString() );
							}
                                                      
                                                        ArrayList<Object> vision=null;
                                                        //message_sender
                                                        vision = request1.getVision();
                                                       // System.out.println("\n\n\n\n\n\n\n1136 vision\n\n\n\n\n\n");
                                                       
                                                        if (vision != null) {

						    	//message_sender
                                                        setPlanetVision(vision, request1.getGamePlayer(), request1.getGranularity());
                                                        //System.out.println("GRANULARITY2 1146");
                                                        
						       }

                                                       ArrayList<Object> myRes=null;

                                                       //message_sender
                                                       myRes = request1.getResources();
                                                    
						       for (int i = 0; i < myRes.size(); i++){
						    	 if (myRes.get(i) instanceof GameResourceMobile){

						    		GameResourceMobile mob = (GameResourceMobile) myRes.get(i);

                                                                setStarShipVision(mob, request1.getGranularity(), request1.getGamePlayer());
                                                               // System.out.println("GRANULARITY 1168");
						    	}

						      }

						}
					}

				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
		}
		);//.start();
        guiUpdate.setPriority(Thread.MAX_PRIORITY);
        guiUpdate.start();
    }

    private static void setPlanetVision(ArrayList<Object> vision, GamePlayer player, double gran){

        MessageSender request1=new MessageSender(9998);

    	for (int i_x = (int) (player.getPosX() - player.getVisibility()); i_x < player.getPosX() + player.getVisibility(); i_x += gran){
			for (int i_y = (int) (player.getPosY() - player.getVisibility()); i_y < player.getPosY() + player.getVisibility(); i_y += gran){

				if ( !(i_x == player.getPosX() && i_y == player.getPosY()) )
					peerGUI.getSpacePanel().addNewInfo(i_x, i_y, null);
			}
		}

    	for (int i = 0; i < vision.size(); i++){
        	if (vision.get(i) instanceof GamePlayerResponsible){

        		GamePlayerResponsible playerResp = (GamePlayerResponsible) vision.get(i);
        		MultiLog.println(RTSGameGUI.class.toString(),"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        		
        		MultiLog.println(RTSGameGUI.class.toString(), i + " VISION un PLAYER " + playerResp.getPosX() + ", " + playerResp.getPosY());
        		

        		peerGUI.getSpacePanel().addNewInfo((int) playerResp.getPosX(), (int) playerResp.getPosY(), playerResp);

        	}
        	else if (vision.get(i) instanceof GameResourceMobileResponsible){

        		GameResourceMobileResponsible resource = (GameResourceMobileResponsible) vision.get(i);
        		MultiLog.println(RTSGameGUI.class.toString(), "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        		
        		MultiLog.println(RTSGameGUI.class.toString(), i + " VISION un MOBILE " + resource.getX() + ", " + resource.getY());
        		

        		peerGUI.getSpacePanel().addNewInfo( (int) resource.getX(), (int) resource.getY(), resource);

        	}

        }
        
         GamePeerInfo info=null;
            //message_sender
         info =new GamePeerInfo( request1.getGamePeerInfo());
         //System.out.println("\n\n\n\n\n\n1231 gamepeer info\n\n\n\n\n\n\n");
      
         String infoid=info.getID();
         String infoname=info.getName();
         double infoposx=info.getPosX();
         double infoposy=info.getPosY();
        // System.out.println("INFO_POS  "+infoname +" "+infoid + " "+infoposx +" "+infoposy );
       
        GamePlayerResponsible planet = new GamePlayerResponsible(infoid, infoname, infoposx,infoposy,0,0,10,0,"","");
        
		if (peerGUI.getSpacePanel() != null)

                      
                        info =new GamePeerInfo( request1.getGamePeerInfo());
                        peerGUI.getSpacePanel().addMyPlanetPosition( (int) Math.round(info.getPosX()), (int) Math.round(info.getPosY()),planet);
                      

    }

    private static void setStarShipVision(GameResourceMobile mob, double gran, GamePlayer player){

    	for (int i_x = (int) (mob.getX() - mob.getVision()); i_x < mob.getX() + mob.getVision(); i_x += gran){
			for (int i_y = (int) (mob.getY() - mob.getVision()); i_y < mob.getY() + mob.getVision(); i_y += gran ){

				if ( !(i_x == player.getPosX() && i_y == player.getPosY()) ){
					peerGUI.getSpacePanel().addNewInfo(i_x, i_y, null);


				}
			}
		}


		ArrayList<Object> mobVis = mob.getResourceVision();

		for (int k = 0; k < mobVis.size(); k++){

			if (mobVis.get(k) instanceof GamePlayerResponsible){
				GamePlayerResponsible playerResp = (GamePlayerResponsible) mobVis.get(k);
				MultiLog.println(RTSGameGUI.class.toString(), "**********************************************");
				
				MultiLog.println(RTSGameGUI.class.toString(), k + " VISION un PLAYER " + playerResp.getPosX() + ", " + playerResp.getPosY());
				

				peerGUI.getSpacePanel().addNewInfo( (int) playerResp.getPosX() , (int) playerResp.getPosY(), playerResp);

			}
			else if (mobVis.get(k) instanceof GameResourceMobileResponsible){
				GameResourceMobileResponsible resource = (GameResourceMobileResponsible) mobVis.get(k);
				MultiLog.println(RTSGameGUI.class.toString(), "**********************************************");
				
				MultiLog.println(RTSGameGUI.class.toString(), k + " VISION un MOBILE " + resource.getX() + ", " + resource.getY());
				
				peerGUI.getSpacePanel().addNewInfo((int) resource.getX(), (int) resource.getY(), resource);

			}

		}


		GameResourceMobileResponsible ship = new GameResourceMobileResponsible(mob.getId(), mob.getDescription(), mob.getOwner(), mob.getOwnerId(),
				mob.getQuantity(), mob.getX(), mob.getY(), 0, mob.getVelocity(), mob.getVision(), 0, "", "");

		if ( !(mob.getX() == player.getPosX() && mob.getY() == player.getPosY()) ){

			peerGUI.getSpacePanel().addNewInfo((int) mob.getX(), (int) mob.getY(), ship);

		}

    }




   

   
    final it.unipr.ce.dsg.p2pgame.platform.bot.message.MessageSender request;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel serverAddrLabel;
    private javax.swing.JLabel serverPortLabel;
    private javax.swing.JPanel battlefieldPanel;
    private javax.swing.JButton buyButton;
    private javax.swing.JLabel euroMoneyLabel;
    private javax.swing.JLabel firstPortLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JList resourcesList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel localAddrLabel;
    private javax.swing.JLabel localPortLabel;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JPanel myStatsPanel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel peerIdLabel;
    private javax.swing.JLabel planetPositionLabel;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel resourceInfoLabel;
    private javax.swing.JLabel resourceQuantityLabel;
    private javax.swing.JLabel resourceTypeLabel;
    private javax.swing.JLabel resourceVelocityLabel;
    private javax.swing.JLabel resourceVelocityUnitLabel;
    private javax.swing.JLabel resourceVisionLabel;
    private javax.swing.JLabel resourceVisionUnitLabel;
    private javax.swing.JLabel resourceXLabel;
    private javax.swing.JLabel resourceYLabel;
    private javax.swing.JLabel resourcesLabel;
    private javax.swing.JTextField serverAddressTextField;
    private javax.swing.JTextField serverPortTextField;
    private javax.swing.JLabel showLocalAddrLabel;
    private javax.swing.JLabel showLocalPortsLabel;
    private javax.swing.JLabel showMoneyLabel;
    private javax.swing.JLabel showPeerIdLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel xPositionLabel;
    private javax.swing.JLabel yPositionLabel;
    //private javax.swing.JPanel spacePanel;
    private BattlefieldPanel spacePanel = null;
    private javax.swing.JPanel gameInfoPanel;

    private javax.swing.JLabel currXPosLabel;
    private javax.swing.JLabel currYPosLabel;

    //private javax.swing.JPanel resType;
    private javax.swing.JLabel resType;
    private javax.swing.JLabel qtInfo;
    private javax.swing.JLabel info;
    private javax.swing.JButton moveButton;
    //private javax.swing.JComboBox choiceAttack;
    private Choice choiceAttack;
    // End of variables declaration//GEN-END:variables

}
