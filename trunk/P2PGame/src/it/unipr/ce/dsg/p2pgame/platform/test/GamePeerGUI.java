/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GamePeerGUI.java
 *
 * Created on 8-set-2009, 13.37.15
 */

package it.unipr.ce.dsg.p2pgame.platform.test;

import it.unipr.ce.dsg.p2pgame.platform.GamePeer;
import it.unipr.ce.dsg.p2pgame.platform.GameResourceEvolve;
import it.unipr.ce.dsg.p2pgame.util.SHA1;

import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author stefanoSeb
 */
public class GamePeerGUI extends javax.swing.JFrame {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;

	String threadId = new Long(Thread.currentThread().getId()).toString();

	public javax.swing.JTable getPlayersTable() {
		return playersTable;
	}

	public void setPlayersTable(javax.swing.JTable playersTable) {
		this.playersTable = playersTable;
	}



	public javax.swing.JTable getMyResourceTable() {
		return myResourceTable;
	}

	public void setMyResourceTable(javax.swing.JTable myResourceTable) {
		this.myResourceTable = myResourceTable;
	}

	public javax.swing.JTable getResourcesTable() {
		return resourcesTable;
	}

	public void setResourcesTable(javax.swing.JTable resourcesTable) {
		this.resourcesTable = resourcesTable;
	}

	public javax.swing.JLabel getXPosLabel() {
		return xPosLabel;
	}

	public javax.swing.JLabel getYPosLabel() {
		return yPosLabel;
	}

	public javax.swing.JLabel getZPosLabel() {
		return zPosLabel;
	}




	public javax.swing.JTable getVisionTable() {
		return visionTable;
	}

	public void setVisionTable(javax.swing.JTable visionTable) {
		this.visionTable = visionTable;
	}

	/** Creates new form GamePeerGUI */
    public GamePeerGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        infoPanel = new javax.swing.JPanel();
        registerButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        x = new javax.swing.JLabel();
        xTextField = new javax.swing.JTextField();
        yTextField = new javax.swing.JTextField();
        y = new javax.swing.JLabel();
        zTextField = new javax.swing.JTextField();
        z = new javax.swing.JLabel();
        moveButton = new javax.swing.JButton();

        xR = new javax.swing.JLabel();
        xRTextField = new javax.swing.JTextField();
        yRTextField = new javax.swing.JTextField();
        yR = new javax.swing.JLabel();
        zRTextField = new javax.swing.JTextField();
        zR = new javax.swing.JLabel();
        moveRButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        createRes = new javax.swing.JTextField();
        pubResButton = new javax.swing.JButton();
        pubMobileButton = new javax.swing.JButton();

        createEvoButton = new javax.swing.JButton();
        createEvoRes = new javax.swing.JTextField();

        cachePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playersTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        resourcesTable = new javax.swing.JTable();
        playersLabel = new javax.swing.JLabel();
        resourcesLabel = new javax.swing.JLabel();
        MyStatus = new javax.swing.JPanel();
        xPosLabel = new javax.swing.JLabel();
        yPosLabel = new javax.swing.JLabel();
        zPosLabel = new javax.swing.JLabel();
        positionLabel = new javax.swing.JLabel();
        positionLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        myResourceTable = new javax.swing.JTable();
        worldPanel = new javax.swing.JPanel();
        visionLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        visionTable = new javax.swing.JTable();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        peerIdLabel = new javax.swing.JLabel();
        ipAddressLabel = new javax.swing.JLabel();
        portNumberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

            	gp.registerOnServer(BigInteger.valueOf(unL).toString(16), BigInteger.valueOf(pwdL).toString(16));
            	usernameLabel.setText(gp.getUsername());
            	passwordLabel.setText(gp.getPassword());
            	peerIdLabel.setText(gp.getMyId());
            	ipAddressLabel.setText(gp.getMyPeer().getIpAddress());
            	portNumberLabel.setText(new Integer(gp.getMyPeer().getPortNumber()).toString());//la porta di input in Chord
            	registerButton.setEnabled(false);
             //   startButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //startButtonActionPerformed(evt);
            	gp.startGame(0,10,0,10,0,10, 1,2, 1);
            	startButton.setEnabled(false);
            }
        });

        x.setText("x:");

        xTextField.setText("0");

        y.setText("y:");

        yTextField.setText("0");

        z.setText("z:");

        zTextField.setText("0");


        moveButton.setText("Move");
        moveButton.addActionListener(new java.awt.event.ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		System.out.println("Player position: " + gp.getPlayer().getPosX() + ", " + gp.getPlayer().getPosY() + ", " + gp.getPlayer().getPosZ());
				//gp.movePlayer(Double.parseDouble(xTextField.getText()), Double.parseDouble(yTextField.getText()), Double.parseDouble(zTextField.getText()));
        		try {
					gp.movePlayer(Double.parseDouble(xTextField.getText()), Double.parseDouble(yTextField.getText()), Double.parseDouble(zTextField.getText()), threadId);
				} catch (NumberFormatException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (InterruptedException e) {
					System.err.println("GamePeerGUI InterruptedException");
					e.printStackTrace();
				}
				System.out.println("New Player position: " + gp.getPlayer().getPosX() + ", " + gp.getPlayer().getPosY() + ", " + gp.getPlayer().getPosZ());
        	}
        });




        xR.setText("x:");

        xRTextField.setText("0");

        yR.setText("y:");

        yRTextField.setText("0");

        zR.setText("z:");

        zRTextField.setText("0");


        moveRButton.setText("MoveResource");
        moveRButton.addActionListener(new java.awt.event.ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		String id ="";
				try {
					id = SHA1.convertToHex(SHA1.calculateSHA1(createRes.getText()));
				} catch (NoSuchAlgorithmException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (UnsupportedEncodingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

        		//gp.moveResourceMobile(id, Double.parseDouble(xRTextField.getText()), Double.parseDouble(yRTextField.getText()), Double.parseDouble(zRTextField.getText()));
				try {
					gp.moveResourceMobile(id, Double.parseDouble(xRTextField.getText()), Double.parseDouble(yRTextField.getText()), Double.parseDouble(zRTextField.getText()), threadId);
				} catch (NumberFormatException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (InterruptedException e) {
					System.err.println("GamePeerGUI InterruptedException moveResourceMobile");
					e.printStackTrace();
				}

        		System.out.println("move della risorsa " + id);
        	}
        });

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //createButtonActionPerformed(evt);
            	gp.createMobileResource(createRes.getText(),1);
            	System.out.println("Creazione della risorsa " + createRes.getText());
            }
        });

        createRes.setText("x deviation");


        pubResButton.setText("PubRes");
        pubResButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //pubResButtonActionPerformed(evt);
            	//gp.publishPosition();
            	try {
					gp.publishPosition(threadId);
				} catch (InterruptedException e) {
					System.err.println("GamePeerGUI InterruptedException publishPosition");
					e.printStackTrace();
				}
            }
        });

        pubMobileButton.setText("PubMob");
        pubMobileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //pubMobileButtonActionPerformed(evt);
            	System.out.println("Chiamata PUB MOBILE RESOURCE");
            	//gp.publishResourceMobile();
            	try {
					gp.publishResourceMobile(threadId);
				} catch (InterruptedException e) {
					System.err.println("GamePeerGUI InterruptedException publishResourceMobile");
					e.printStackTrace();
				}
            	System.out.println("POST - Chiamata PUB MOBILE RESOURCE");
            }
        });

        createEvoButton.setText("CreateEvo");
        createEvoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               // createEvoButtonActionPerformed(evt);
            	GameResourceEvolve evoRes = new GameResourceEvolve(createEvoRes.getText() + "aaa", createEvoRes.getText(), 10, 5000, 1);
            	gp.addToMyResource(evoRes);
            	System.out.println("FINE CREAZIONE RISORSA EVOLVIBILE");
            }
        });

        createEvoRes.setText("x mob");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(registerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(startButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                                        .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(zTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(moveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addComponent(xR, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(xRTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(yR, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(yRTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(zR, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(zRTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(moveRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                                .addComponent(pubResButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pubMobileButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                                .addComponent(createRes, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(createButton)))
                        .addContainerGap())
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(createEvoRes, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(createEvoButton)
                        .addContainerGap(442, Short.MAX_VALUE))))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xR, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xRTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yR, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yRTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zR, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zRTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createRes, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pubResButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pubMobileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createEvoRes, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createEvoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Info", infoPanel);
        //"Id","Username","x","y","z","Time","Position","Old Position"
        playersTable.setModel(new GamePlayerResponsableTableModel());
        playersTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumn col0 = playersTable.getColumnModel().getColumn(0);
        int widthCol0 = 350;
        col0.setPreferredWidth(widthCol0);
        TableColumn col1 = playersTable.getColumnModel().getColumn(1);
        int widthCol1 = 100;
        col1.setPreferredWidth(widthCol1);
        TableColumn col2 = playersTable.getColumnModel().getColumn(2);
        int widthCol2 = 50;
        col2.setPreferredWidth(widthCol2);
        TableColumn col3 = playersTable.getColumnModel().getColumn(3);
        int widthCol3 = 50;
        col3.setPreferredWidth(widthCol3);
        TableColumn col4 = playersTable.getColumnModel().getColumn(4);
        int widthCol4 = 50;
        col4.setPreferredWidth(widthCol4);
        TableColumn col5 = playersTable.getColumnModel().getColumn(5);
        int widthCol5 = 200;
        col5.setPreferredWidth(widthCol5);
        TableColumn col6 = playersTable.getColumnModel().getColumn(6);
        int widthCol6 = 350;
        col6.setPreferredWidth(widthCol6);
        TableColumn col7 = playersTable.getColumnModel().getColumn(7);
        int widthCol7 = 350;
        col7.setPreferredWidth(widthCol7);
        jScrollPane1.setViewportView(playersTable);


        resourcesTable.setModel(new GameMobileResourceResponsableTableModel());
        resourcesTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        //"Id","Name","Owner Id","Owner","Quantity","x","y","z","Time","Position","Old Position"
        TableColumn colRes0 = resourcesTable.getColumnModel().getColumn(0);
        int widthColRes0 = 350;
        colRes0.setPreferredWidth(widthColRes0);
        TableColumn colRes1 = resourcesTable.getColumnModel().getColumn(1);
        int widthColRes1 = 50;
        colRes1.setPreferredWidth(widthColRes1);
        TableColumn colRes2 = resourcesTable.getColumnModel().getColumn(2);
        int widthColRes2 = 350;
        colRes2.setPreferredWidth(widthColRes2);
        TableColumn colRes3 = resourcesTable.getColumnModel().getColumn(3);
        int widthColRes3 = 50;
        colRes3.setPreferredWidth(widthColRes3);
        TableColumn colRes4 = resourcesTable.getColumnModel().getColumn(4);
        int widthColRes4 = 50;
        colRes4.setPreferredWidth(widthColRes4);
        TableColumn colRes5 = resourcesTable.getColumnModel().getColumn(5);
        int widthColRes5 = 50;
        colRes5.setPreferredWidth(widthColRes5);
        TableColumn colRes6 = resourcesTable.getColumnModel().getColumn(6);
        int widthColRes6 = 50;
        colRes6.setPreferredWidth(widthColRes6);
        TableColumn colRes7 = resourcesTable.getColumnModel().getColumn(7);
        int widthColRes7 = 50;
        colRes7.setPreferredWidth(widthColRes7);
        TableColumn colRes8 = resourcesTable.getColumnModel().getColumn(8);
        int widthColRes8 = 50;
        colRes8.setPreferredWidth(widthColRes8);
        TableColumn colRes9 = resourcesTable.getColumnModel().getColumn(9);
        int widthColRes9 = 50;
        colRes9.setPreferredWidth(widthColRes9);
        TableColumn colRes10 = resourcesTable.getColumnModel().getColumn(10);
        int widthColRes10 = 50;
        colRes10.setPreferredWidth(widthColRes10);
        jScrollPane2.setViewportView(resourcesTable);

        playersLabel.setForeground(new java.awt.Color(255, 0, 51));
        playersLabel.setText("Players");

        resourcesLabel.setForeground(new java.awt.Color(255, 0, 51));
        resourcesLabel.setText("Resources");

        javax.swing.GroupLayout cachePanelLayout = new javax.swing.GroupLayout(cachePanel);
        cachePanel.setLayout(cachePanelLayout);
        cachePanelLayout.setHorizontalGroup(
            cachePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cachePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cachePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, /*590*/1500, Short.MAX_VALUE)
                    .addComponent(playersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resourcesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE))
                .addContainerGap())
        );
        cachePanelLayout.setVerticalGroup(
            cachePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cachePanelLayout.createSequentialGroup()
                .addComponent(playersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(resourcesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ShowCache", cachePanel);

        xPosLabel.setText("x");

        yPosLabel.setText("y");

        zPosLabel.setText("z");

        positionLabel.setForeground(new java.awt.Color(255, 0, 51));
        positionLabel.setText("Position:");

        positionLabel1.setForeground(new java.awt.Color(255, 0, 51));
        positionLabel1.setText("Resource:");

        myResourceTable.setModel(new MyResourceTableModel());

        myResourceTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumn colMyRes0 = myResourceTable.getColumnModel().getColumn(0);
        int widthColMyRes0 = 350;
        colMyRes0.setPreferredWidth(widthColMyRes0);
        TableColumn colMyRes1 = myResourceTable.getColumnModel().getColumn(1);
        int widthColMyRes1 = 50;
        colMyRes1.setPreferredWidth(widthColMyRes1);
        TableColumn colMyRes2 = myResourceTable.getColumnModel().getColumn(2);
        int widthColMyRes2 = 350;
        colMyRes2.setPreferredWidth(widthColMyRes2);
        TableColumn colMyRes3 = myResourceTable.getColumnModel().getColumn(3);
        int widthColMyRes3 = 50;
        colMyRes3.setPreferredWidth(widthColMyRes3);
        TableColumn colMyRes4 = myResourceTable.getColumnModel().getColumn(4);
        int widthColMyRes4 = 50;
        colMyRes4.setPreferredWidth(widthColMyRes4);
        TableColumn colMyRes5 = myResourceTable.getColumnModel().getColumn(5);
        int widthColMyRes5 = 50;
        colMyRes5.setPreferredWidth(widthColMyRes5);
        TableColumn colMyRes6 = myResourceTable.getColumnModel().getColumn(6);
        int widthColMyRes6 = 50;
        colMyRes6.setPreferredWidth(widthColMyRes6);
        jScrollPane3.setViewportView(myResourceTable);


        javax.swing.GroupLayout MyStatusLayout = new javax.swing.GroupLayout(MyStatus);
        MyStatus.setLayout(MyStatusLayout);
        MyStatusLayout.setHorizontalGroup(
            MyStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MyStatusLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(MyStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MyStatusLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(MyStatusLayout.createSequentialGroup()
                        .addComponent(positionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(MyStatusLayout.createSequentialGroup()
                        .addComponent(positionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(xPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(yPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(zPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))))
        );
        MyStatusLayout.setVerticalGroup(
            MyStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MyStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MyStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xPosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(positionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(positionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("My Status", MyStatus);

        visionLabel.setForeground(new java.awt.Color(255, 0, 51));
        visionLabel.setText("Vision:");

        visionTable.setModel(new VisionTableModel());
        visionTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumn colVis0 = playersTable.getColumnModel().getColumn(0);
        int widthColVis0 = 50;
        colVis0.setPreferredWidth(widthColVis0);
        TableColumn colVis1 = playersTable.getColumnModel().getColumn(1);
        int widthColVis1 = 350;
        colVis1.setPreferredWidth(widthColVis1);
        TableColumn colVis2 = playersTable.getColumnModel().getColumn(2);
        int widthColVis2 = 50;
        colVis2.setPreferredWidth(widthColVis2);
        TableColumn colVis3 = playersTable.getColumnModel().getColumn(3);
        int widthColVis3 = 50;
        colVis3.setPreferredWidth(widthColVis3);
        TableColumn colVis4 = playersTable.getColumnModel().getColumn(4);
        int widthColVis4 = 50;
        colVis4.setPreferredWidth(widthColVis4);
        TableColumn colVis5 = playersTable.getColumnModel().getColumn(5);
        int widthColVis5 = 50;
        colVis5.setPreferredWidth(widthColVis5);
        jScrollPane4.setViewportView(visionTable);


        javax.swing.GroupLayout worldPanelLayout = new javax.swing.GroupLayout(worldPanel);
        worldPanel.setLayout(worldPanelLayout);
        worldPanelLayout.setHorizontalGroup(
            worldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(worldPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(worldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addComponent(visionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        worldPanelLayout.setVerticalGroup(
            worldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, worldPanelLayout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addComponent(visionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("World", worldPanel);

        usernameLabel.setText("username");

        passwordLabel.setText("password");

        peerIdLabel.setText("peerId");

        ipAddressLabel.setText("IP Address");

        portNumberLabel.setText("First port used");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(peerIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(ipAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(348, 348, 348))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(peerIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(portNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {


		Random ran = new Random();
		int port = ran.nextInt(9999);
		int gamePort = port+2; //richieste quattro porte consecutive
		Random rand = new Random();
	    unL = ran.nextInt(16);
		pwdL = ran.nextInt(16);

		gp = new GamePeer(port, port-1, 160, "", "localhost", 1235, gamePort, gamePort-1, "localhost", 2222, 4000,1000,64000,2000);
		//final GamePeer gpFinal = gp;

    	final GamePeerGUI peerGUI = new GamePeerGUI();
    	peerGUI.setName("Game Peer Test GUI ");
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new GamePeerGUI().setVisible(true);
            	peerGUI.setVisible(true);
            }
        });


        final GamePlayerResponsableTableModel playerTM = new GamePlayerResponsableTableModel();

        final GameMobileResourceResponsableTableModel resourceTM = new GameMobileResourceResponsableTableModel();

        final MyResourceTableModel myResourceTM = new MyResourceTableModel();

        final VisionTableModel visionTM = new VisionTableModel();

		new Thread( new Runnable() {
			public void run() {
				try {
					while (true){

						Thread.sleep(3000);


				        peerGUI.getPlayersTable().setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
				        TableColumn col0 = peerGUI.getPlayersTable().getColumnModel().getColumn(0);
				        int widthCol0 = 350;
				        col0.setPreferredWidth(widthCol0);
				        TableColumn col1 = peerGUI.getPlayersTable().getColumnModel().getColumn(1);
				        int widthCol1 = 100;
				        col1.setPreferredWidth(widthCol1);
				        TableColumn col2 = peerGUI.getPlayersTable().getColumnModel().getColumn(2);
				        int widthCol2 = 50;
				        col2.setPreferredWidth(widthCol2);
				        TableColumn col3 = peerGUI.getPlayersTable().getColumnModel().getColumn(3);
				        int widthCol3 = 50;
				        col3.setPreferredWidth(widthCol3);
				        TableColumn col4 = peerGUI.getPlayersTable().getColumnModel().getColumn(4);
				        int widthCol4 = 50;
				        col4.setPreferredWidth(widthCol4);
				        TableColumn col5 = peerGUI.getPlayersTable().getColumnModel().getColumn(5);
				        int widthCol5 = 200;
				        col5.setPreferredWidth(widthCol5);
				        TableColumn col6 = peerGUI.getPlayersTable().getColumnModel().getColumn(6);
				        int widthCol6 = 50;
				        col6.setPreferredWidth(widthCol6);
				        TableColumn col7 = peerGUI.getPlayersTable().getColumnModel().getColumn(7);
				        int widthCol7 = 50;
				        col7.setPreferredWidth(widthCol7);


						playerTM.set_FileTableModel(gp.getResPlayers());
						//System.out.println("DIM " + gpFinal.getResPlayers().size());
						peerGUI.getPlayersTable().setModel(playerTM);

						if (gp.getPlayer() != null){
							peerGUI.getXPosLabel().setText(new Double(gp.getPlayer().getPosX()).toString());
							peerGUI.getYPosLabel().setText(new Double(gp.getPlayer().getPosY()).toString());
							peerGUI.getZPosLabel().setText(new Double(gp.getPlayer().getPosZ()).toString());
						}

						peerGUI.getResourcesTable().setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
				        //"Id","Name","Owner Id","Owner","Quantity","x","y","z","Time","Position","Old Position"
				        TableColumn colRes0 = peerGUI.getResourcesTable().getColumnModel().getColumn(0);
				        int widthColRes0 = 350;
				        colRes0.setPreferredWidth(widthColRes0);
				        TableColumn colRes1 = peerGUI.getResourcesTable().getColumnModel().getColumn(1);
				        int widthColRes1 = 50;
				        colRes1.setPreferredWidth(widthColRes1);
				        TableColumn colRes2 = peerGUI.getResourcesTable().getColumnModel().getColumn(2);
				        int widthColRes2 = 350;
				        colRes2.setPreferredWidth(widthColRes2);
				        TableColumn colRes3 = peerGUI.getResourcesTable().getColumnModel().getColumn(3);
				        int widthColRes3 = 50;
				        colRes3.setPreferredWidth(widthColRes3);
				        TableColumn colRes4 = peerGUI.getResourcesTable().getColumnModel().getColumn(4);
				        int widthColRes4 = 50;
				        colRes4.setPreferredWidth(widthColRes4);
				        TableColumn colRes5 = peerGUI.getResourcesTable().getColumnModel().getColumn(5);
				        int widthColRes5 = 50;
				        colRes5.setPreferredWidth(widthColRes5);
				        TableColumn colRes6 = peerGUI.getResourcesTable().getColumnModel().getColumn(6);
				        int widthColRes6 = 50;
				        colRes6.setPreferredWidth(widthColRes6);
				        TableColumn colRes7 = peerGUI.getResourcesTable().getColumnModel().getColumn(7);
				        int widthColRes7 = 50;
				        colRes7.setPreferredWidth(widthColRes7);
				        TableColumn colRes8 = peerGUI.getResourcesTable().getColumnModel().getColumn(8);
				        int widthColRes8 = 50;
				        colRes8.setPreferredWidth(widthColRes8);
				        TableColumn colRes9 = peerGUI.getResourcesTable().getColumnModel().getColumn(9);
				        int widthColRes9 = 50;
				        colRes9.setPreferredWidth(widthColRes9);
				        TableColumn colRes10 = peerGUI.getResourcesTable().getColumnModel().getColumn(10);
				        int widthColRes10 = 50;
				        colRes10.setPreferredWidth(widthColRes10);

				        resourceTM.set_FileTableModel(gp.getResResources());
						peerGUI.getResourcesTable().setModel(resourceTM);

						//PER MY RESOURCE
						peerGUI.getMyResourceTable().setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
				        TableColumn colMyRes0 = peerGUI.getMyResourceTable().getColumnModel().getColumn(0);
				        int widthColMyRes0 = 350;
				        colMyRes0.setPreferredWidth(widthColMyRes0);
				        TableColumn colMyRes1 = peerGUI.getMyResourceTable().getColumnModel().getColumn(1);
				        int widthColMyRes1 = 50;
				        colMyRes1.setPreferredWidth(widthColMyRes1);
				        TableColumn colMyRes2 = peerGUI.getMyResourceTable().getColumnModel().getColumn(2);
				        int widthColMyRes2 = 350;
				        colMyRes2.setPreferredWidth(widthColMyRes2);
				        TableColumn colMyRes3 = peerGUI.getMyResourceTable().getColumnModel().getColumn(3);
				        int widthColMyRes3 = 50;
				        colMyRes3.setPreferredWidth(widthColMyRes3);
				        TableColumn colMyRes4 = peerGUI.getMyResourceTable().getColumnModel().getColumn(4);
				        int widthColMyRes4 = 50;
				        colMyRes4.setPreferredWidth(widthColMyRes4);
				        TableColumn colMyRes5 = peerGUI.getMyResourceTable().getColumnModel().getColumn(5);
				        int widthColMyRes5 = 50;
				        colMyRes5.setPreferredWidth(widthColMyRes5);
				        TableColumn colMyRes6 = peerGUI.getMyResourceTable().getColumnModel().getColumn(6);
				        int widthColMyRes6 = 50;
				        colMyRes6.setPreferredWidth(widthColMyRes6);
				        myResourceTM.set_FileTableModel(gp.getMyResources());
				        peerGUI.getMyResourceTable().setModel(myResourceTM);

						//PER LA VISION
				        peerGUI.getVisionTable().setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
				        TableColumn colVis0 = peerGUI.getVisionTable().getColumnModel().getColumn(0);
				        int widthColVis0 = 50;
				        colVis0.setPreferredWidth(widthColVis0);
				        TableColumn colVis1 = peerGUI.getVisionTable().getColumnModel().getColumn(1);
				        int widthColVis1 = 350;
				        colVis1.setPreferredWidth(widthColVis1);
				        TableColumn colVis2 = peerGUI.getVisionTable().getColumnModel().getColumn(2);
				        int widthColVis2 = 50;
				        colVis2.setPreferredWidth(widthColVis2);
				        TableColumn colVis3 = peerGUI.getVisionTable().getColumnModel().getColumn(3);
				        int widthColVis3 = 50;
				        colVis3.setPreferredWidth(widthColVis3);
				        TableColumn colVis4 = peerGUI.getVisionTable().getColumnModel().getColumn(4);
				        int widthColVis4 = 50;
				        colVis4.setPreferredWidth(widthColVis4);
				        TableColumn colVis5 = peerGUI.getVisionTable().getColumnModel().getColumn(5);
				        int widthColVis5 = 50;
				        colVis5.setPreferredWidth(widthColVis5);

				        ArrayList<Object> vision = gp.getVision();
				        if (gp.getVision() != null) {
				        	gp.printVision();
				        	//TODO: aggiustare, non funziona
					    //    visionTM.set_FileTableModel(gp.getVision());
				            visionTM.set_FileTableModel(vision);
					        peerGUI.getVisionTable().setModel(visionTM);
				        }
					}

				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
		}
		).start();

    }

    private static GamePeer gp;
    static int unL;
	static int pwdL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MyStatus;
    private javax.swing.JPanel cachePanel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel ipAddressLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton moveButton;
    private javax.swing.JTable myResourceTable;
    private javax.swing.JLabel peerIdLabel;
    private javax.swing.JLabel playersLabel;
    private javax.swing.JTable playersTable;
    private javax.swing.JLabel portNumberLabel;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JLabel positionLabel1;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel resourcesLabel;
    private javax.swing.JTable resourcesTable;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel visionLabel;
    private javax.swing.JTable visionTable;
    private javax.swing.JPanel worldPanel;
    private javax.swing.JLabel x;
    private javax.swing.JLabel xPosLabel;
    private javax.swing.JTextField xTextField;
    private javax.swing.JLabel y;
    private javax.swing.JLabel yPosLabel;
    private javax.swing.JTextField yTextField;
    private javax.swing.JLabel z;
    private javax.swing.JLabel zPosLabel;
    private javax.swing.JTextField zTextField;
    private javax.swing.JButton createEvoButton;
    private javax.swing.JTextField createEvoRes;

    private javax.swing.JLabel xR;
    private javax.swing.JTextField xRTextField;
    private javax.swing.JLabel yR;
    private javax.swing.JTextField yRTextField;
    private javax.swing.JLabel zR;
    private javax.swing.JTextField zRTextField;
    private javax.swing.JButton moveRButton;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField createRes;
    private javax.swing.JButton pubResButton;
    private javax.swing.JButton pubMobileButton;
    // End of variables declaration//GEN-END:variables

}
